/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.miura.music.View;

import java.util.List;

import com.miura.music.Controller.MusicController;
import com.miura.music.Model.Music;
import com.miura.music.View.ViewModel.MusicTitleLabel;
import java.awt.FontMetrics;

/**
 *
 * @author Admin
 */
public class MainView extends javax.swing.JFrame {

    /**
     * Creates new form MainView
     */
    public MainView() {
        firstInit();
        initComponents();
        lastInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        titleName = new javax.swing.JLabel();
        playButton = new javax.swing.JButton();
        showListButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        rigthPanel = new javax.swing.JPanel();
        swappedPanel = new javax.swing.JPanel();
        playPanel = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        playTrackButton = new com.miura.music.View.ViewModel.CustomButton();
        prevTrackButton = new com.miura.music.View.ViewModel.CustomButton();
        nextTrackButton = new com.miura.music.View.ViewModel.CustomButton();
        musicTitleLabel1 = new com.miura.music.View.ViewModel.MusicTitleLabel();
        listPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        musicList = new javax.swing.JList<>();
        musicTitleLabel = new com.miura.music.View.ViewModel.MusicTitleLabel();
        insertMusicButton = new com.miura.music.View.ViewModel.CustomButton();
        deleteMusicButton = new com.miura.music.View.ViewModel.CustomButton();
        playCurrentButton = new com.miura.music.View.ViewModel.CustomButton();
        progressPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        leftPanel.setBackground(new java.awt.Color(153, 153, 153));
        leftPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        titleName.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleName.setText("My Music");
        titleName.setToolTipText("");

        playButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        playButton.setText("Play");
        playButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        showListButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        showListButton.setText("List of music");
        showListButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        showListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showListButtonActionPerformed(evt);
            }
        });

        quitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quitButton.setText("Quit");
        quitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleName, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleName, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(showListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        swappedPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        swappedPanel.setLayout(new java.awt.CardLayout());

        playPanel.setMaximumSize(new java.awt.Dimension(939, 569));
        playPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        playTrackButton.setText("PLAY");
        playTrackButton.setCircle(true);
        playTrackButton.setColorClick(new java.awt.Color(204, 204, 255));
        playTrackButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        playTrackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playTrackButtonActionPerformed(evt);
            }
        });

        prevTrackButton.setText("PREV");
        prevTrackButton.setCircle(true);
        prevTrackButton.setColorClick(new java.awt.Color(204, 204, 255));
        prevTrackButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prevTrackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevTrackButtonActionPerformed(evt);
            }
        });

        nextTrackButton.setText("NEXT");
        nextTrackButton.setCircle(true);
        nextTrackButton.setColorClick(new java.awt.Color(204, 204, 255));
        nextTrackButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(prevTrackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(playTrackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(nextTrackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(279, Short.MAX_VALUE))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playTrackButton, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(prevTrackButton, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(nextTrackButton, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                .addContainerGap())
        );

        playPanel.add(buttonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 230, -1, -1));

        musicTitleLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        musicTitleLabel1.setText(currentMusic==null ? "No music chosen" : currentMusic.toString());
        musicTitleLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        playPanel.add(musicTitleLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 140, 915, 72));

        swappedPanel.add(playPanel, "card2");

        musicList.setModel(model);
        musicList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        musicList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                musicListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(musicList);

        musicTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        musicTitleLabel.setText("No music chosen");
        musicTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        insertMusicButton.setText("Insert Music");
        insertMusicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertMusicButtonActionPerformed(evt);
            }
        });

        deleteMusicButton.setText("Delete Music");
        deleteMusicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMusicButtonActionPerformed(evt);
            }
        });

        playCurrentButton.setText("PLAY");
        playCurrentButton.setCircle(true);
        playCurrentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playCurrentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listPanelLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(insertMusicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(deleteMusicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(musicTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(listPanelLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(playCurrentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(listPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertMusicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteMusicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96)
                .addComponent(musicTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(playCurrentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        swappedPanel.add(listPanel, "card3");

        progressPanel.setBackground(new java.awt.Color(204, 204, 255));
        progressPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout progressPanelLayout = new javax.swing.GroupLayout(progressPanel);
        progressPanel.setLayout(progressPanelLayout);
        progressPanelLayout.setHorizontalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        progressPanelLayout.setVerticalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout rigthPanelLayout = new javax.swing.GroupLayout(rigthPanel);
        rigthPanel.setLayout(rigthPanelLayout);
        rigthPanelLayout.setHorizontalGroup(
            rigthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(progressPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(swappedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        rigthPanelLayout.setVerticalGroup(
            rigthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rigthPanelLayout.createSequentialGroup()
                .addComponent(swappedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(rigthPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rigthPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        changePageSwappedPanel(playPanel);
    }//GEN-LAST:event_playButtonActionPerformed

    private void prevTrackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevTrackButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prevTrackButtonActionPerformed

    private void showListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showListButtonActionPerformed
        
        changePageSwappedPanel(listPanel);
    }//GEN-LAST:event_showListButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        
        System.exit(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void insertMusicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertMusicButtonActionPerformed
        
        fc.setMultiSelectionEnabled(true);
        fc.setFileFilter(filter);
        fc.setDialogTitle("Choose Pictures");
        fc.setCurrentDirectory(new java.io.File("."));

        if (fc.showOpenDialog(null) == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File[] file = fc.getSelectedFiles();
            if (model.contains(MusicController.noMusicObj)) model.removeAllElements();
            for (int i=0; i<file.length; i++) {
                musicController.insertMusic(file[i].getAbsolutePath());
                model.addElement(new Music(file[i].getName(), file[i]));
            }
        }
    }//GEN-LAST:event_insertMusicButtonActionPerformed

    private void musicListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_musicListValueChanged
        
        selectedMusicList = musicList.getSelectedValue();
        
        if (selectedMusicList==null) {
            musicTitleLabel.setText("No music chosen");
        } else {
            musicTitleLabel.setText(selectedMusicList.toString());
            checkForTitleSize(musicTitleLabel);
        }
    }//GEN-LAST:event_musicListValueChanged

    private void playCurrentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playCurrentButtonActionPerformed
        
        currentMusic = selectedMusicList;
        musicController.choose(currentMusic);
        musicTitleLabel1.setText(currentMusic.toString());
        changePageSwappedPanel(playPanel);
        playTrackButtonActionPerformed(evt);
    }//GEN-LAST:event_playCurrentButtonActionPerformed

    private void playTrackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playTrackButtonActionPerformed
        
        if (currentMusic==null) return;
        
        if (!isRunning) {
            musicController.play();
            isRunning = true;
            playTrackButton.setText("STOP");
        } else {
            musicController.stop();
            isRunning = false;
            playTrackButton.setText("PLAY");
        }
        
    }//GEN-LAST:event_playTrackButtonActionPerformed

    private void deleteMusicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMusicButtonActionPerformed
        // TODO add your handling code here:
        Music music = selectedMusicList;
        if (music==null) {
            javax.swing.JOptionPane.showMessageDialog(null, "No music chosen", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int answer = javax.swing.JOptionPane.showOptionDialog(null, "You are about to delete " + music.getName() + "!\nClick YES to confirm deletion.", "Warning", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE, null, null, 0);
        
        // YES: 0 ; NO: 1
        
        if (answer==0) {
            if (isRunning && music == currentMusic) playTrackButtonActionPerformed(evt);
            model.removeElement(music);
            musicController.deleteMusic(music);

            if (music==currentMusic) currentMusic=null;
            if (currentMusic==null) musicTitleLabel1.setText("No music chosen");
        }
        
    }//GEN-LAST:event_deleteMusicButtonActionPerformed

    
    private void changePageSwappedPanel(javax.swing.JPanel panel) {
        swappedPanel.removeAll();
        swappedPanel.add(panel);
        swappedPanel.repaint();
        swappedPanel.revalidate();
    }
    
    
    private void checkForTitleSize(MusicTitleLabel label) {
        label.stopTimer();
        
        int strWidth = (int)label.getFontMetrics(label.getFont()).getStringBounds(label.getText(), null).getWidth();
        if (strWidth > label.getWidth()) label.startTimer(strWidth + label.getWidth(), -1, 0);
    }
    
    
    private void firstInit() {
        musicController = new MusicController();
        model = new javax.swing.DefaultListModel<>();
        initModelList();
        isRunning = false;
    }
    
    private void lastInit() {
        this.setLocationRelativeTo(null);

        filter = new javax.swing.filechooser.FileNameExtensionFilter("Audios (.wav)", "wav");
        fc = new javax.swing.JFileChooser();
        System.out.println(playTrackButton.getComponentOrientation());
        musicTitleLabel.setSize(new java.awt.Dimension(10000, musicTitleLabel.getHeight()));
    }
    
    private void initModelList() {

        List<Music> deletedMusics = musicController.checkForExistenceMusic();
        List<Music> musics = musicController.getMusics();

        if (deletedMusics!=null) {
            StringBuilder str = new StringBuilder("There were some musics have been deleted:\n");
            for (Music music : deletedMusics) str.append("- " + music.getName() + "\n");
            javax.swing.JOptionPane.showMessageDialog(null, str, "Warning", javax.swing.JOptionPane.WARNING_MESSAGE);
        }
        
        if (musics==null) {
            model.addElement(MusicController.noMusicObj);
            return;
        }

        for (Music music : musics) {
            model.addElement(music);
        }
        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void createFrame() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }
    
    // Custom variables
    private MusicController musicController;
    private javax.swing.filechooser.FileNameExtensionFilter filter;
    private javax.swing.JFileChooser fc;
    private javax.swing.DefaultListModel<Music> model;
    
    private Music currentMusic;
    private Music selectedMusicList;
    private boolean isRunning;
    // End of custom variables

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private com.miura.music.View.ViewModel.CustomButton deleteMusicButton;
    private com.miura.music.View.ViewModel.CustomButton insertMusicButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel listPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JList<Music> musicList;
    private com.miura.music.View.ViewModel.MusicTitleLabel musicTitleLabel;
    private com.miura.music.View.ViewModel.MusicTitleLabel musicTitleLabel1;
    private com.miura.music.View.ViewModel.CustomButton nextTrackButton;
    private javax.swing.JButton playButton;
    private com.miura.music.View.ViewModel.CustomButton playCurrentButton;
    private javax.swing.JPanel playPanel;
    private com.miura.music.View.ViewModel.CustomButton playTrackButton;
    private com.miura.music.View.ViewModel.CustomButton prevTrackButton;
    private javax.swing.JPanel progressPanel;
    private javax.swing.JButton quitButton;
    private javax.swing.JPanel rigthPanel;
    private javax.swing.JButton showListButton;
    private javax.swing.JPanel swappedPanel;
    private javax.swing.JLabel titleName;
    // End of variables declaration//GEN-END:variables
}
